{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Intermittent Change Simulator Configuration",
  "description": "Tells which stopping times to simulate.",
  "type": "object",
  "@ropufu-target-path": "config.g.hpp",
  "@ropufu-options": ["skip hash"],
  "@ropufu-namespace": "ropufu::sequential::intermittent",
  "@ropufu-typename": "config",
  "@ropufu-includes": [
    {"header": "<cstddef>", "comment": "std::size_t"}
  ],
  "additionalProperties": false,
  "properties": {
    "$schema": {
      "type": "string",
      "@ropufu-options": ["ignore"]
    },
    "simulations": {
      "type": "integer",
      "@ropufu-typename": "std::size_t",
      "minimum": 0,
      "@ropufu-validation-message": "Number of simulations cannot be negative."
    },
    "stopping times": {
      "type": "array",
      "@ropufu-typename": "std::vector<nlohmann::json>",
      "description": "Rules to run.",
      "items": {
        "type": "object",
        "@ropufu-options": ["ignore"],
        "$ref": "#/definitions/stopping time initializer"
      }
    }
  },
  "required": ["simulations", "stopping times"],
  "definitions": {
    "interval": {
      "@ropufu-options": ["ignore"],
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "from": {"type": "number"},
            "to": {"type": "number"}
          },
          "required": ["from", "to"]
        },
        {
          "type": "array",
          "minItems": 2,
          "maxItems": 2,
          "items": {"type": "number"}
        }
      ]
    },
    "vector initializer": {
      "@ropufu-options": ["ignore"],
      "oneOf": [
        {
          "type": "array",
          "items": {"type": "number"}
        },
        {
          "type": "object",
          "properties": {
            "range": {
              "$ref": "#/definitions/interval",
              "description": "Range of values to span."
            },
            "count": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of values."
            },
            "spacing": {
              "type": "string",
              "enum": ["linear", "exponential", "logarithmic"],
              "description": "How the values should be spaced.",
              "default": "linear"
            }
          },
          "required": ["range", "count"]
        }
      ]
    },
    "stopping time initializer": {
      "type": "object",
      "@ropufu-options": ["ignore"],
      "additionalProperties": true,
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of the stopping time."
        },
        "thresholds": {
          "$ref": "#/definitions/vector initializer",
          "description": "SStopping thresholds."
        }
      }
    }
  }
}